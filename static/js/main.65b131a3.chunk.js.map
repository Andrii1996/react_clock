{"version":3,"sources":["components/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","toLocaleTimeString","componentDidMount","timerId","setInterval","setState","console","log","clearInterval","this","className","props","name","Component","App","isClockVisible","randomNum","newName","Math","round","random","clear","toggleVisibility","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,kBAAoB,WAClB,EAAKC,QAAUC,aAAY,WACzB,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAEjCK,QAAQC,KAAI,IAAIP,MAAOC,wBACtB,MAVP,qEAcIO,cAAcC,KAAKN,WAdvB,+BAkBI,OACE,yBAAKO,UAAU,OACb,wCAEG,MACAD,KAAKE,MAAMC,MAEd,2CAEG,IACCH,KAAKX,MAAMC,WA5BvB,GAA2Bc,aCqDZC,G,kNAlDbhB,MAAQ,CACNc,KAAM,EACNG,gBAAgB,G,EAGlBC,UAAY,WACV,IAAMC,EAAWC,KAAKC,MAAM,EAAI,GAAAD,KAAKE,UAErC,EAAKf,SAAS,CACZO,KAAMK,IAGRX,QAAQC,IAAR,qCAA0C,EAAKT,MAAMc,KAArD,eAAgEK,K,EAGlEI,MAAQ,WACNb,cAAc,EAAKL,U,EAGrBmB,iBAAmB,WACjB,EAAKjB,UAAS,SAAAP,GAAK,MAAK,CACtBiB,gBAAiBjB,EAAMiB,oB,uDAIjB,IAAD,EAC0BN,KAAKX,MAA9Bc,EADD,EACCA,KAAMG,EADP,EACOA,eAEd,OACE,yBAAKL,UAAU,OACZK,GAAkB,kBAAC,EAAD,CAAOH,KAAMA,IAChC,4BACEF,UAAU,uBACVa,KAAK,SACLC,QAASf,KAAKa,kBAEbP,EAAiB,OAAS,QAE7B,4BACEL,UAAU,wBACVa,KAAK,SACLC,QAASf,KAAKO,WAHhB,wB,GAvCUH,cCDlBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.65b131a3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends Component {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount = () => {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line no-console\n      console.log(new Date().toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p>\n          Clock name\n          {' : '}\n          {this.props.name}\n        </p>\n        <p>\n          Current time:\n          {' '}\n          { this.state.date }\n        </p>\n      </div>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    name: 0,\n    isClockVisible: true,\n  };\n\n  randomNum = () => {\n    const newName = (Math.round(1 + Math.random() * (100 - 1)));\n\n    this.setState({\n      name: newName,\n    });\n    // eslint-disable-next-line no-console\n    console.log(`The Clock was renamed from ${this.state.name} to ${newName}`);\n  }\n\n  clear = () => {\n    clearInterval(this.timerId);\n  }\n\n  toggleVisibility = () => {\n    this.setState(state => ({\n      isClockVisible: !state.isClockVisible,\n    }));\n  }\n\n  render() {\n    const { name, isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        {isClockVisible && <Clock name={name} />}\n        <button\n          className=\"button button--first\"\n          type=\"button\"\n          onClick={this.toggleVisibility}\n        >\n          {isClockVisible ? 'Hide' : 'Show'}\n        </button>\n        <button\n          className=\"button button--second\"\n          type=\"button\"\n          onClick={this.randomNum}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}